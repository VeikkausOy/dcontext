started test.

0 objects are open:
  (end of list)

context: 
created test object.

@RefTestObject.dec:   started dec
@RefTestObject.dec: slept, returning value
object is {a:1, b:2, x:3, sum:2@3, dec:2@0}

context: 
  ref-test.a           1
  ref-test.a.version   0
  ref-test.b           2
  ref-test.b.version   0
  ref-test.dec         Success(1@0)
  ref-test.dec.version ((0,0),(0,0))
  ref-test.sleepMs     0
  ref-test.sleepMs.version 0
  ref-test.sum         Success(1@3)
  ref-test.sum.version (0,0)
  ref-test.x           3
  ref-test.x.version   0

2 objects are open:
  3
  0
  (end of list)

changed a to 4

@RefTestObject.dec:   started dec
@RefTestObject.dec: slept, returning value
object is {a:4, b:2, x:3, sum:2@6, dec:2@3}

context: 
  ref-test.a           4
  ref-test.a.version   1
  ref-test.b           2
  ref-test.b.version   0
  ref-test.dec         Success(1@3)
  ref-test.dec.version ((1,0),(0,0))
  ref-test.sleepMs     0
  ref-test.sleepMs.version 0
  ref-test.sum         Success(1@6)
  ref-test.sum.version (1,0)
  ref-test.x           3
  ref-test.x.version   0

2 objects are open:
  6
  3
  (end of list)

let's do the test, where we break things
let's first turn on sleep...
sleep is now 250ms
let's then request dec...
@RefTestObject.dec:   started dec
...and close the sum, while dec is sleeping!

ref-test.sum is now: None

2 objects are open:
  6
  3
  (end of list)

let's wait for the result..
@RefTestObject.dec: slept, returning value
dec is 2@3

object is {a:4, b:2, x:3, sum:2@6, dec:2@3}
let's check situation, where we have several requests

let's update source data by settin a to 7
let's request dec 3 times...
@RefTestObject.dec:   started dec

@RefTestObject.dec: slept, returning value
dec request 1 resulted in 2@6
dec request 2 resulted in 3@6
dec request 3 resulted in 2@6

object is {a:7, b:2, x:3, sum:2@9, dec:2@6}
closed the context and the test object.

0 objects are open:
  (end of list)

